# Generated by Django 5.2.4 on 2025-07-31 12:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('sensorial', '‚òï Experiencia sensorial'), ('ambiente', 'üí¨ Ambiente humano'), ('hacer', '‚úçÔ∏è Para hacer cosas'), ('estetica', 'üåø Est√©tica y atm√≥sfera'), ('emocional', 'üß† Estados mentales')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Cafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('google_maps_url', models.URLField(blank=True, null=True)),
                ('photo1', models.ImageField(blank=True, null=True, upload_to='cafes/')),
                ('photo1_title', models.CharField(blank=True, max_length=200, null=True)),
                ('photo2', models.ImageField(blank=True, null=True, upload_to='cafes/')),
                ('photo2_title', models.CharField(blank=True, max_length=200, null=True)),
                ('photo3', models.ImageField(blank=True, null=True, upload_to='cafes/')),
                ('photo3_title', models.CharField(blank=True, max_length=200, null=True)),
                ('is_vegan_friendly', models.BooleanField(default=False, verbose_name='Vegano friendly')),
                ('is_pet_friendly', models.BooleanField(default=False, verbose_name='Pet friendly')),
                ('has_wifi', models.BooleanField(default=False, verbose_name='WiFi')),
                ('has_outdoor_seating', models.BooleanField(default=False, verbose_name='Mesas al aire libre')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Estacionamiento disponible')),
                ('is_accessible', models.BooleanField(default=False, verbose_name='Accesible para personas con movilidad reducida')),
                ('has_vegetarian_options', models.BooleanField(default=False, verbose_name='Opciones vegetarianas')),
                ('serves_breakfast', models.BooleanField(default=False, verbose_name='Sirve desayuno')),
                ('serves_alcohol', models.BooleanField(default=False, verbose_name='Sirve alcohol')),
                ('has_books_or_games', models.BooleanField(default=False, verbose_name='Libros o juegos disponibles')),
                ('has_air_conditioning', models.BooleanField(default=False, verbose_name='Aire acondicionado')),
                ('has_gluten_free', models.BooleanField(default=False, verbose_name='Sin TACC / Gluten Free')),
                ('has_specialty_coffee', models.BooleanField(default=False, verbose_name='Caf√© de especialidad')),
                ('has_artisanal_pastries', models.BooleanField(default=False, verbose_name='Pasteler√≠a artesanal')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('visibility_level', models.IntegerField(choices=[(0, 'Gratis'), (1, 'Destacado'), (2, 'Premium')], default=0)),
                ('favorites', models.ManyToManyField(blank=True, related_name='favorite_cafes', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafes', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='cafes', to='reviews.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner_reply', models.TextField(blank=True, null=True)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='reviews.cafe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='reviews', to='reviews.tag')),
            ],
            options={
                'unique_together': {('user', 'cafe')},
            },
        ),
    ]
